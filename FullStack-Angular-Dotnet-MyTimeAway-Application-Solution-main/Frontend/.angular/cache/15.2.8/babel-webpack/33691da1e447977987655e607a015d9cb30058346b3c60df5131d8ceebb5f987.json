{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeaveService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/';\n  }\n  getAllLeaves() {\n    return this.http.get(`${this.baseUrl}get-all-leaves`);\n  }\n  getLeaveById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  createLeave(leave) {\n    return this.http.post(`${this.baseUrl}`, leave);\n  }\n  updateLeaveById(id, leave) {\n    return this.http.put(`${this.baseUrl}/${id}`, leave);\n  }\n  deleteLeaveById(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  searchLeaves(employeeId, employeeName, totalDays = 0) {\n    let params = new HttpParams();\n    if (employeeId) {\n      params = params.append('employeeId', employeeId);\n    }\n    if (employeeName) {\n      params = params.append('employeeName', employeeName);\n    }\n    if (totalDays > 0) {\n      params = params.append('totalDays', totalDays.toString());\n    }\n    return this.http.get(`${this.baseUrl}/search`, {\n      params\n    });\n  }\n  cancelLeaveRequest(id) {\n    return this.http.put(`${this.baseUrl}/${id}/cancel`, {});\n  }\n  approveLeaveRequest(id) {\n    return this.http.put(`${this.baseUrl}/${id}/approve`, {});\n  }\n  rejectLeaveRequest(id) {\n    return this.http.put(`${this.baseUrl}/${id}/reject`, {});\n  }\n}\nLeaveService.ɵfac = function LeaveService_Factory(t) {\n  return new (t || LeaveService)(i0.ɵɵinject(i1.HttpClient));\n};\nLeaveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LeaveService,\n  factory: LeaveService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAkCA,UAAU,QAAQ,sBAAsB;;;AAO1E,OAAM,MAAOC,YAAY;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,yBAAyB;EAEH;EAExCC,YAAY;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,gBAAgB,CAAC;EAClE;EAEAC,YAAY,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,EAAE,CAAC;EACxD;EAEAC,WAAW,CAACC,KAAY;IACpB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,KAAK,CAAC;EAC1D;EAEAE,eAAe,CAACJ,EAAU,EAAEE,KAAY;IACpC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,EAAE,EAAEE,KAAK,CAAC;EAC/D;EAEAI,eAAe,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACT,OAAO,IAAIE,EAAE,EAAE,CAAC;EAC1D;EAEAQ,YAAY,CAACC,UAAmB,EAAEC,YAAqB,EAAEC,YAAoB,CAAC;IAC1E,IAAIC,MAAM,GAAG,IAAIpB,UAAU,EAAE;IAC7B,IAAIiB,UAAU,EAAE;MACZG,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,YAAY,EAAEJ,UAAU,CAAC;;IAEpD,IAAIC,YAAY,EAAE;MACdE,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEH,YAAY,CAAC;;IAExD,IAAIC,SAAS,GAAG,CAAC,EAAE;MACfC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEF,SAAS,CAACG,QAAQ,EAAE,CAAC;;IAE7D,OAAO,IAAI,CAACnB,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,SAAS,EAAE;MAAEc;IAAM,CAAE,CAAC;EACvE;EAEAG,kBAAkB,CAACf,EAAU;IACzB,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,SAAS,EAAE,EAAE,CAAC;EACnE;EAEAgB,mBAAmB,CAAChB,EAAU;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,UAAU,EAAE,EAAE,CAAC;EACpE;EAEAiB,kBAAkB,CAACjB,EAAU;IACzB,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,SAAS,EAAE,EAAE,CAAC;EACnE;;AAjDSP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YAFT;AAAM","names":["HttpParams","LeaveService","constructor","http","getAllLeaves","get","baseUrl","getLeaveById","id","createLeave","leave","post","updateLeaveById","put","deleteLeaveById","delete","searchLeaves","employeeId","employeeName","totalDays","params","append","toString","cancelLeaveRequest","approveLeaveRequest","rejectLeaveRequest","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\FullStack-Angular-Dotnet-MyTimeAway-Application-Solution-main\\Frontend\\src\\app\\services\\leave.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Leave } from '../models/leave.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LeaveService {\r\n    private baseUrl = 'https://localhost:5001/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllLeaves(): Observable<Leave[]> {\r\n        return this.http.get<Leave[]>(`${this.baseUrl}get-all-leaves`);\r\n    }\r\n\r\n    getLeaveById(id: number): Observable<Leave> {\r\n        return this.http.get<Leave>(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    createLeave(leave: Leave): Observable<Leave> {\r\n        return this.http.post<Leave>(`${this.baseUrl}`, leave);\r\n    }\r\n\r\n    updateLeaveById(id: number, leave: Leave): Observable<Leave> {\r\n        return this.http.put<Leave>(`${this.baseUrl}/${id}`, leave);\r\n    }\r\n\r\n    deleteLeaveById(id: number): Observable<void> {\r\n        return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    searchLeaves(employeeId?: string, employeeName?: string, totalDays: number = 0): Observable<Leave[]> {\r\n        let params = new HttpParams();\r\n        if (employeeId) {\r\n            params = params.append('employeeId', employeeId);\r\n        }\r\n        if (employeeName) {\r\n            params = params.append('employeeName', employeeName);\r\n        }\r\n        if (totalDays > 0) {\r\n            params = params.append('totalDays', totalDays.toString());\r\n        }\r\n        return this.http.get<Leave[]>(`${this.baseUrl}/search`, { params });\r\n    }\r\n\r\n    cancelLeaveRequest(id: number): Observable<Leave> {\r\n        return this.http.put<Leave>(`${this.baseUrl}/${id}/cancel`, {});\r\n    }\r\n\r\n    approveLeaveRequest(id: number): Observable<Leave> {\r\n        return this.http.put<Leave>(`${this.baseUrl}/${id}/approve`, {});\r\n    }\r\n\r\n    rejectLeaveRequest(id: number): Observable<Leave> {\r\n        return this.http.put<Leave>(`${this.baseUrl}/${id}/reject`, {});\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}